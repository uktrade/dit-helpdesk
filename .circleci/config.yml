# ~/.circleci/config.yml
version: 2
aliases:
  - &redis_version              redis:3.2.10
  - &postgres_version           circleci/postgres:10
  - &elasticsearch_version      docker.elastic.co/elasticsearch/elasticsearch:6.4.3
  - &python_version             circleci/python:3.6
  - &kibana_version             docker.elastic.co/kibana/kibana:6.4.3

  - &unit_base_envs
    DEBUG: True
    DJANGO_SECRET_KEY: DJANGO_SECRET_KEY
    DJANGO_SETTINGS_MODULE: config.settings.test
    DJANGO_BASE_DIR: /app
    DIT_HELPDESK_ADMIN_PASSWORD: DIT_HELPDESK_ADMIN_PASSWORD
    DJANGO_POSTGRES_HOST: DJANGO_POSTGRES_HOST
    DJANGO_POSTGRES_DATABASE: DJANGO_POSTGRES_DATABASE
    DJANGO_POSTGRES_USER: DJANGO_POSTGRES_USER
    DJANGO_POSTGRES_PASSWORD: DJANGO_POSTGRES_PASSWORD
    DJANGO_POSTGRES_PORT: DJANGO_POSTGRES_PORT
    ALLOWED_HOSTS: 127.0.0.1,localhost
    RESTRICT_ADMIN: True
    ALLOWED_ADMIN_IPS: 127.0.0.1,
    ALLOWED_ADMIN_IP_RANGES: 127.0.0.1/32,
    LOGIN_URL: LOGIN_URL
    LOGIN_REDIRECT_URL: LOGIN_REDIRECT_URL
    IP_SAFELIST_XFF_INDEX: IP_SAFELIST_XFF_INDEX
    APP_START_DOMAIN: /choose-country/
    LOG_LEVEL: INFO
    DIRECTORY_CLIENT_CORE_CACHE_EXPIRE_SECONDS: 0
    DIRECTORY_CLIENT_CORE_CACHE_LOG_THROTTLING_SECONDS: 0
    SENTRY_ENVIRONMENT: docker-development
    SENTRY_DSN: SENTRY_DSN
    FEEDBACK_EMAIL: FEEDBACK_EMAIL
    FEEDBACK_CONTACT: FEEDBACK_CONTACT
    DEFRA_EMAIL: DEFRA_EMAIL
    DEFRA_CONTACT: DEFRA_CONTACT
    BEIS_EMAIL: BEIS_EMAIL
    BEIS_CONTACT: BEIS_CONTACT
    DDAT_CONTACT: "DDAT Support Team"
    DIT_CONTACT: "DIT EU Exit Team"
    CONTACT_SUBJECT: "New UK Trade Helpdesk enquiry"
    FEEDBACK_SUBJECT: "UK Trade Helpdesk feedback"
    SERVICE_NAME: "twuk"
    DIT_SUBDOMAIN: "dit"
    DIT_SUBJECT_SUFFIX: " - DIT EU Exit Enquiries"
    DDAT_SUBJECT_SUFFIX: " - DDAT Support Team"
    HMRC_TAX_FORM_URL: HMRC_TAX_FORM_URL
    HELPDESK_GA_GTM: HELPDESK_GA_GTM
    QUOTA_DEFAULT_MESSAGE: "You can check the availability of this quota by contacting the relevant department."
    TEST_OUTPUT_DIR: .
    FEEDBACK_DESTINATION_EMAIL: going@to.com





  - &ui_test_base_envs
    ADMIN_ENABLED: True
    DEBUG: True
    DISABLE_COLLECTSTATIC: 1
    DJANGO_SECRET_KEY: DJANGO_SECRET_KEY
    DJANGO_SETTINGS_MODULE: config.settings.docker_development
    DJANGO_BASE_DIR: /app
    DIT_HELPDESK_ADMIN_PASSWORD: DIT_HELPDESK_ADMIN_PASSWORD
    DJANGO_POSTGRES_HOST: DJANGO_POSTGRES_HOST
    DJANGO_POSTGRES_DATABASE: DJANGO_POSTGRES_DATABASE
    DJANGO_POSTGRES_USER: DJANGO_POSTGRES_USER
    DJANGO_POSTGRES_PASSWORD: DJANGO_POSTGRES_PASSWORD
    DJANGO_POSTGRES_PORT: DJANGO_POSTGRES_PORT
    ALLOWED_HOSTS: 127.0.0.1,localhost
    RESTRICT_ADMIN: RESTRICT_ADMIN
    ALLOWED_ADMIN_IPS: ALLOWED_ADMIN_IPS
    ALLOWED_ADMIN_IP_RANGES: ALLOWED_ADMIN_IP_RANGES
    LOGIN_URL: LOGIN_URL
    LOGIN_REDIRECT_URL: LOGIN_REDIRECT_URL
    IP_SAFELIST_XFF_INDEX: IP_SAFELIST_XFF_INDEX
    APP_START_DOMAIN: APP_START_DOMAIN
    LOG_LEVEL: INFO
    DIRECTORY_CLIENT_CORE_CACHE_EXPIRE_SECONDS: DIRECTORY_CLIENT_CORE_CACHE_EXPIRE_SECONDS
    DIRECTORY_CLIENT_CORE_CACHE_LOG_THROTTLING_SECONDS: DIRECTORY_CLIENT_CORE_CACHE_LOG_THROTTLING_SECONDS
    SENTRY_ENVIRONMENT: SENTRY_ENVIRONMENT
    SENTRY_DSN: SENTRY_DSN
    FEEDBACK_EMAIL: FEEDBACK_EMAIL
    FEEDBACK_CONTACT: FEEDBACK_CONTACT
    DEFRA_EMAIL: DEFRA_EMAIL
    DEFRA_CONTACT: DEFRA_CONTACT
    BEIS_EMAIL: BEIS_EMAIL
    BEIS_CONTACT: BEIS_CONTACT
    DDAT_CONTACT: "DDAT Support Team"
    DIT_CONTACT: "DIT EU Exit Team"
    CONTACT_SUBJECT: "New UK Trade Helpdesk enquiry"
    FEEDBACK_SUBJECT: "UK Trade Helpdesk feedback"
    SERVICE_NAME: "twuk"
    DIT_SUBDOMAIN: "dit"
    DIT_SUBJECT_SUFFIX: " - DIT EU Exit Enquiries"
    DDAT_SUBJECT_SUFFIX: " - DDAT Support Team"
    HMRC_TAX_FORM_URL: HMRC_TAX_FORM_URL
    HELPDESK_GA_GTM: HELPDESK_GA_GTM
    QUOTA_DEFAULT_MESSAGE: "You can check the availability of this quota by contacting the relevant department."
    TEST_OUTPUT_DIR: "/app/reports"
    FEEDBACK_DESTINATION_EMAIL: FEEDBACK_DESTINATION_EMAIL




  # Redis container
  - &docker_redis
    image: *redis_version
    environment:
      REDIS_URL: "redis://localhost:6379/"

  # Postgres container
  - &docker_postgres
    image: *postgres_version
    name: postgres
#    password: test_db_psswd
    environment:
      POSTGRES_DB: helpdesk
      POSTGRES_HOST_AUTH_METHOD: trust

  # Elasticsearch container
  - &docker_elasticsearch
    image: *elasticsearch_version
    name: es
    environment:
      ES_URL: http://es:9200

  # Kibana container
  - &docker_kibana
    image: *kibana_version
    environment:
      ELASTICSEARCH_URL: http://es:9200
    ports: "5601:5601"

  # Python container
  - &docker_python
    image: *python_version

  # Helpdesk test container
  - &docker_helpdesk_test
    image: ukti/dit-helpdesk-test:latest

  # Step for ui test* jobs
  - &wait_for_backend
    run:
      name: Wait for backend
      command: dockerize -wait http://localhost:8000/choose-country/ -timeout 300s

jobs:
  unit_tests:
    docker:
      - <<: *docker_python
        environment: *unit_base_envs
      - *docker_postgres
      - *docker_elasticsearch
      - *docker_redis
    working_directory: ~/app
    steps:
      - checkout
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - v1-dependencies-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          command: pipenv install --system --dev
      - save_cache:
          key: v1-dependencies-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ~/.local/share/virtualenvs/venv
      - run:
          name: Running tests
          command:
            coverage run manage.py test dit_helpdesk --settings=config.settings.test
      - run:
          name: Generate coverage
          command: |
            coverage report
            coverage xml -o test-reports/coverage.xml
            coverage html -d test-reports/coverage_html
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports

  ui_tests:
    docker:
      - <<: *docker_helpdesk_test
        environment: *ui_test_base_envs
      - *docker_postgres
      - *docker_elasticsearch
      - *docker_redis
      - *docker_kibana
    working_directory: ~/app
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          command: pipenv install --system --dev
      - save_cache:
          key: v1-dependencies-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - "."
      - run:
          name: Start app
          command:
            ./compose/automation/django/start.sh
          background: true
      - *wait_for_backend
      - run:
          name: Run tests
          command: |
            export PATH=$PATH:$HOME/bin
            pytest ui_test/specs
      - store_artifacts:
          path: screenshots


# CircleCI workflows
workflows:
  version: 2
  helpdesk:
    jobs:
      - unit_tests
      - ui_tests
