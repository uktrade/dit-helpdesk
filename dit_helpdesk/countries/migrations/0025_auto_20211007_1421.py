# Generated by Django 2.2.24 on 2021-10-07 13:21

import os, csv
from countries.models import Country
from django.db import migrations, models
import logging
from . import DATA_DIR


def backup_old_scenarios(apps, schema_editor):
    fieldnames = ["country_code", "scenario", "content_url", "has_uk_trade_agreement"]

    csv_file_path = os.path.join(DATA_DIR, "migration_0025_backup.csv")

    with open(csv_file_path, "w") as csv_file:
        csv_writer = csv.DictWriter(csv_file, fieldnames=fieldnames)

        csv_writer.writeheader()

        for country in Country.objects.order_by("country_code"):
            csv_writer.writerow(
                {
                    "country_code": country.country_code,
                    "scenario": country.scenario,
                    "content_url": country.content_url,
                    "has_uk_trade_agreement": country.has_uk_trade_agreement,
                }
            )


def verify_change(apps, schema_editor):
    Country = apps.get_model("countries", "Country")
    countries_table = Country.objects.all()

    for country in countries_table:
        logging.info(
            "Name: "
            + country.name
            + " Scenario: "
            + country.scenario
            + " URL: "
            + country.content_url
        )
        if country.scenario is None:
            raise ValueError(
                "Scenario data has not been copied for " + country.country_name
            )
        if country.content_url is None:
            raise ValueError("URL data has not been copied for " + country.country_name)


def fix_countries_trade_names(apps, schema_editor):
    # Fixing the two data errors in the last migration:
    # Kosovo,"UK-Kosovo?partnership, trade and cooperation?agreement",
    # North Macedonia,"UK-North Macedonia Partnership, Trade and?Cooperation?agreement"
    # Need to remove the "?" and replace with a regular space.
    Country = apps.get_model("countries", "Country")

    country_fix_list = ["Kosovo", "North Macedonia"]

    for country_name in country_fix_list:
        try:
            country = Country.objects.get(name=country_name)
            country.trade_agreement_title = country.trade_agreement_title.replace(
                "?", " "
            )
            country.save()
        except Exception:
            logging.warning("Did not update trade agreement title for " + country_name)


class Migration(migrations.Migration):

    dependencies = [
        ("countries", "0024_auto_20211007_1049"),
    ]

    # 1. Save column contents to CSV file for backup
    # 2. Make scenario column nullable in case of rollback
    # 3. Rename fields to make way for new versions to be renamed

    operations = [
        migrations.RunPython(backup_old_scenarios, migrations.RunPython.noop),
        migrations.AlterField(
            model_name="country",
            name="scenario",
            field=models.CharField(max_length=255, null=True),
        ),
        migrations.RenameField(
            model_name="country",
            old_name="content_url",
            new_name="old_content_url",
        ),
        migrations.RenameField(
            model_name="country",
            old_name="scenario",
            new_name="old_scenario",
        ),
        migrations.RenameField(
            model_name="country",
            old_name="new_trade_agreement_url",
            new_name="content_url",
        ),
        migrations.RenameField(
            model_name="country",
            old_name="new_scenario",
            new_name="scenario",
        ),
        migrations.RunPython(verify_change, migrations.RunPython.noop),
        migrations.RunPython(fix_countries_trade_names, migrations.RunPython.noop),
    ]
