version: "2"
services:
  helpdesk:
    build: .
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - HISTFILE=/root/hist/.bash_history
    networks:
      - inside-network
      - directory-forms-api_outside-network
    volumes:
      - .:/app
      - bashhistory:/root/hist
    entrypoint: dockerize -wait tcp://postgres:5432 -wait tcp://es:9200 -wait tcp://redis:6379 -timeout 120s
    env_file:
      - .env
    depends_on:
      - postgres
      - es
      - redis
    command: ./start.sh
    stdin_open: true
    tty: true

  webpack:
    image: node:14
    command: bash -c "
      npm set unsafe-perm true
      && npm install
      && npm run dev
      "
    env_file:
      - .env
    volumes:
      - .:/app
    working_dir: /app

  postgres:
    image: postgres:10
    env_file:
      - .env
    networks:
      - inside-network
    ports:
      - "5432:5432"
    volumes:
      - db-volume:/var/lib/postgresql/data

  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.3
    networks:
      - inside-network
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"

  redis:
    image: redis:3.2
    networks:
      - inside-network
    ports:
      - "6379:6379"

  kibana:
    image: docker.elastic.co/kibana/kibana:7.9.3
    networks:
      - inside-network
    environment:
      ELASTICSEARCH_URL: http://es:9200
      ELASTICSEARCH_HOSTS: http://es:9200
    ports:
      - "5601:5601"

  s3:
    image: minio/minio:latest
    networks:
      - inside-network
    volumes:
      - ./minio_config:/root/.minio
      - ./volumes/s3:/export/
    expose:
      - "9000"
    ports:
      - "9000:9000"
    entrypoint: sh
    command: -c '/usr/bin/minio server /export'
    environment:
      - MINIO_ROOT_USER=minio_username
      - MINIO_ROOT_PASSWORD=minio_password

networks:
  inside-network:
    driver: bridge
  directory-forms-api_outside-network:
    external: true

volumes:
  bashhistory:
  db-volume:
