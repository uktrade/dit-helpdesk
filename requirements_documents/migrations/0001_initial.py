# Generated by Django 2.1.5 on 2019-01-21 20:35

import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import requirements_documents.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AbstractCommodity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commodity_code', models.CharField(max_length=10)),
                ('goods_nomenclature_sid', models.CharField(max_length=10)),
                ('tts_heading_json', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('tts_is_leaf', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter_code', models.CharField(max_length=30)),
                ('tts_json', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Commodity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commodity_code', models.CharField(max_length=10, unique=True)),
                ('goods_nomenclature_sid', models.CharField(max_length=10)),
                ('tts_json', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('tts_heading_json', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('tts_number_indents', models.IntegerField(blank=True, null=True)),
                ('tts_is_leaf', models.BooleanField()),
                ('tts_section_position', models.IntegerField(blank=True, null=True)),
            ],
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('pg_objects', requirements_documents.models.PostgresManager()),
            ],
        ),
        migrations.CreateModel(
            name='CommodityHasDocTitle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origin_country', models.CharField(max_length=120)),
                ('commodity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='requirements_documents.Commodity')),
            ],
        ),
        migrations.CreateModel(
            name='EuTradeHelpdeskDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('group_name', models.CharField(choices=[('product_requirements', 'Product Requirements'), ('import_procedures', 'Import Procedures')], max_length=120)),
                ('query_urls', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=900), default=list, size=None)),
                ('selenium_elem_html', models.CharField(blank=True, max_length=6000, null=True)),
                ('origin_country', models.CharField(max_length=10)),
                ('commodity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='requirements_documents.Commodity')),
            ],
        ),
        migrations.CreateModel(
            name='EuTradeHelpdeskDocumentTitle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=999, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='HasRequirementDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eu_trade_helpdesk_website_destination_country', models.CharField(max_length=120)),
                ('eu_trade_helpdesk_website_origin_country', models.CharField(max_length=120)),
                ('eu_trade_helpdesk_website_label', models.CharField(max_length=120)),
                ('commodity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='requirements_documents.Commodity')),
            ],
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('pg_objects', requirements_documents.models.PostgresManager()),
            ],
        ),
        migrations.CreateModel(
            name='Heading',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading_code', models.CharField(max_length=30, unique=True)),
                ('tts_json', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('chapter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='requirements_documents.Chapter')),
            ],
        ),
        migrations.CreateModel(
            name='RequirementDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=80)),
                ('requirement_type', models.CharField(max_length=80)),
                ('destination_country', models.CharField(max_length=80)),
                ('language', models.CharField(max_length=80)),
                ('html', models.TextField(blank=True, null=True)),
                ('html_normalised', models.TextField(blank=True, null=True)),
                ('query_url', models.CharField(max_length=250)),
            ],
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('pg_objects', requirements_documents.models.PostgresManager()),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section_id', models.CharField(max_length=30, unique=True)),
                ('tts_json', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='requirementdocument',
            unique_together={('code', 'requirement_type', 'destination_country', 'language')},
        ),
        migrations.AddField(
            model_name='hasrequirementdocument',
            name='document',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='requirements_documents.RequirementDocument'),
        ),
        migrations.AddField(
            model_name='eutradehelpdeskdocument',
            name='fragment1',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='eu_trade_helpdesk_documents1', to='requirements_documents.RequirementDocument'),
        ),
        migrations.AddField(
            model_name='eutradehelpdeskdocument',
            name='fragment2',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='eu_trade_helpdesk_documents2', to='requirements_documents.RequirementDocument'),
        ),
        migrations.AddField(
            model_name='commodityhasdoctitle',
            name='document_title',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='requirements_documents.EuTradeHelpdeskDocumentTitle'),
        ),
        migrations.AddField(
            model_name='commodity',
            name='document_titles',
            field=models.ManyToManyField(through='requirements_documents.CommodityHasDocTitle', to='requirements_documents.EuTradeHelpdeskDocumentTitle'),
        ),
        migrations.AddField(
            model_name='commodity',
            name='heading',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='requirements_documents.Heading'),
        ),
        migrations.AddField(
            model_name='commodity',
            name='parent_abstract_commodity',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children_concrete', to='requirements_documents.AbstractCommodity'),
        ),
        migrations.AddField(
            model_name='commodity',
            name='requirement_documents',
            field=models.ManyToManyField(through='requirements_documents.HasRequirementDocument', to='requirements_documents.RequirementDocument'),
        ),
        migrations.AddField(
            model_name='chapter',
            name='section',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='requirements_documents.Section'),
        ),
        migrations.AddField(
            model_name='abstractcommodity',
            name='heading',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='requirements_documents.Heading'),
        ),
        migrations.AddField(
            model_name='abstractcommodity',
            name='parent_abstract_commodity',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children_abstract', to='requirements_documents.AbstractCommodity'),
        ),
        migrations.AlterUniqueTogether(
            name='hasrequirementdocument',
            unique_together={('commodity', 'document', 'eu_trade_helpdesk_website_destination_country', 'eu_trade_helpdesk_website_origin_country')},
        ),
        migrations.AlterUniqueTogether(
            name='commodityhasdoctitle',
            unique_together={('commodity', 'document_title', 'origin_country')},
        ),
        migrations.AlterUniqueTogether(
            name='commodity',
            unique_together={('commodity_code', 'goods_nomenclature_sid')},
        ),
        migrations.AlterUniqueTogether(
            name='abstractcommodity',
            unique_together={('commodity_code', 'goods_nomenclature_sid')},
        ),
    ]
