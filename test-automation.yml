version: '2'
services:

  helpdesk:
    build:
      context: .
      dockerfile: ./compose/automation/django/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - ~/.bash_history:/root/.bash_history
    entrypoint: dockerize -wait tcp://postgres:5432 -wait tcp://es:9200 -wait tcp://redis:6379 -timeout 120s
    env_file:
      - ./.envs/.development/.django
      - ./.envs/.development/.postgres
    depends_on:
      - postgres
      - es
      - redis
    command: /app/compose/automation/django/start.sh

  postgres:
    image: postgres:10
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=helpdesk

  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.4.3
    restart: unless-stopped
    ports:
      - "9200:9200"

  redis:
    image: redis:3.2
    restart: unless-stopped
    ports:
      - "6379:6379"

  kibana:
    image: docker.elastic.co/kibana/kibana:6.4.3
    environment:
      ELASTICSEARCH_URL: http://es:9200
    ports:
      - "5601:5601"

  dockerhost:
      image: qoomon/docker-host
      cap_add: [ 'NET_ADMIN', 'NET_RAW' ]
      mem_limit: 8M
      restart: on-failure
  tcp_message_emitter:
      depends_on: [ dockerhost ]
      image: alpine
      command: [ "sh", "-c", "while :; do date; sleep 1; done | nc 'dockerhost' 2323 -v"]
  udp_message_emitter:
      depends_on: [ dockerhost ]
      image: alpine
      command: [ "sh", "-c", "while :; do date; sleep 1; done | nc 'dockerhost' 5353 -u -v"]
