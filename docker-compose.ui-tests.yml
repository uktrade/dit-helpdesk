version: "2"
services:
  helpdesk:
    build:
      context: .
      dockerfile: ./ui_test/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    entrypoint: dockerize -wait tcp://postgres:5432 -wait tcp://es:9200 -wait tcp://redis:6379 -timeout 120s
    env_file: .env.test
    depends_on:
      - postgres
      - es
      - redis
    command: ./start.sh

  ui-tests:
    build:
      context: .
      dockerfile: ./ui_test/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    entrypoint: dockerize -wait tcp://postgres:5432 -wait tcp://es:9200 -wait tcp://redis:6379 -wait tcp://helpdesk:8000 -timeout 120s
    env_file: .env.test
    depends_on:
      - postgres
      - es
      - redis
      - helpdesk
    command: pipenv run pytest ui_test/specs

  postgres:
    image: postgres:10
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=helpdesk

  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.3
    restart: unless-stopped
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"

  redis:
    image: redis:3.2
    restart: unless-stopped
    ports:
      - "6379:6379"
